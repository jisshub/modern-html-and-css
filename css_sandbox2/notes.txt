---div + p

which targets the p element that comes directly after  the div,
not traget any p inside the div.

--div > p
targets  direct child p of div.


* styling based on attribute */

    /* here v style the a tag with target attrbiute */
    a[target]
    {
        color: #ff45ff;
    }

/* styling based on attrbute values  */

    /* styled <a> tag with attribute: value is target: _self */
    a[target = '_self']
    {
        text-decoration: none;
    }




 /* first child */
    li:first-child
    {
        background: red;
    }

    /* last child */
    li:last-child
    {
        background: green;
    }

    /* nth child */
    /* eg: 3rd child */
    li:nth-child(3)

    {
        background: purple;
    
        width: 100px;
        height: 50px;
    }
    
    /* every 3rd child */
    li:nth-child(3n)
    {
        background: lightblue;
    }

    /* every odd element */
    li:nth-child(odd)
    {
        background:orangered;
        width: 200px;
        height: 50px;
        text-align: center;
    }

    /* every even element */
    li:nth-child(even)

    {
        background: grey;
        color: #f4f4f4;
    }


Animations
-------------
using keyframes

 /* name and duration are must have propery for animation */
      animation-name: animate-div;
      /* animation duration */
      animation-duration: 5s;
      /* ease-in: starts slow but ends fast */
      /* ease-out: starts fast but ends slow */
      /* ease-in-out: starts slow, ends slow */
      animation-timing-function: ease-in;
      /* count of animation */
      /* if 3, animation shows 3 times */
      animation-iteration-count: 2;
      /* delay 3s bfore animation starts */
      animation-delay: 2s;
      /* to stay the animation at the end
      instead of returning back to 200px */
      animation-fill-mode: forwards;

      define @rules for keyframes
     @keyframes animate-div {
          /* set starting and endng width for animations
          from {
              width: 200px; # starts from 200px
          }
          to{
              width: 700px;  #ends at 700px
          }
      }


using animaition shorut
----------------------------
/* animation: name duration timing-function delay iteration-count direction fill-mode; */



css transitions
---------------
-- transition on single property

.box{
        background: white;
        width: 100px;
        height: 100px; 
        /* transition property */
        transition: background;
        /* duration */
        transition-duration: 3s;   
        transition-timing-function: ease-in-out;
        /* delay before transitions */
        transition-delay: 2s;
       
    }

here v appply transition efects on a box
for tarnsition to take effect, v have to specify
an event like hover,

/* transition happens while hovering on it,
here event is hover */
.box:hover{
    background: green;
}



-- transition on all properties given in event


.box{
    background-color: white;
    width: 100px;
    height: 100px;
    /* transition on all sepcified properties */
    /* transition: all;
    transition-duration: 3s;
    transition-timing-function: ease-in-out; */

    /* shortcut for transition */
    transition: all 3s ease-in-out;
}
.box:hover{
    /* transition happens on these properties of box*/
    background: red;
    border-radius: 50%;
    width: 200px;
    height: 200px;
}


