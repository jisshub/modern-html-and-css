Grid items
--------
-- grid items are those item with in grid class


grid columns
----------------------
grid-templte-column
 -- based on the number of columns - provide the 
    width for each column instead of column count.

for eg: if want 3 columns with 200px width
grid-template-column: 200px 200px 200px

sample
----------
/* style the grid */
    .grid{
        display: grid;

        /* specify the width for each columns */
        grid-template-columns: 200px 200px 200px 200px;

        /* auto value fills the remaining width to fill the page */
        grid-template-columns: 200px 200px auto auto;

        /* all have same width */
        grid-template-columns: auto auto auto auto;

        /* using repeat() instead of repeating widrh */
        /* takes two args - 1. column count, 2. column width */
        grid-template-columns: repeat(4, auto);

        /* using fraction units/fr unit for column width */
        grid-template-columns: 2fr 1fr 4fr 3fr;

        /* fr units in repeat() */
        grid-template-columns: repeat(4, 2fr);

        /* space around grids - use grid-gap property*/
        grid-gap: 2rem;
    }

Grid Rows
---------------

grids are aligned row wise/vertically


.grid{
    display: grid;

    /* grid-template-rows to specify width for each grid in rows wise*/
    grid-template-rows: 1fr 3fr 4fr 2fr;

    /* grid-auto-rows to style the implicit grids , ie: 
    grids those with no width specified in grid template rows */
    grid-auto-rows: 2fr;

    /* using grid-template-columns */
    grid-template-columns: repeat(3, 2fr);

}

spanning the grid items across rows and columns
----------------------------------------

/* select a grid item to span across */
.item:first-child{
    /* column to start the span */
    grid-column-start: 1;

    /* column to end span - count the lines in b/w,
    also border lines to get 4 */
    grid-column-end: 4;

    /* row to start the span */
    grid-row-start: 1;

    /* spanning ends at row 3 */
    grid-row-end: 3;
}
-- shorter way of spanning grids 

.item:first-child()
{
    /* use grid-column and grid-row property*/
    /* spanning across columns*/
    /* start from column1 and span grid to column 4 */
    grid-column: 1 /span 4;

    /* start from row1 and span grid to row 3 */
    grid-row: 1 /span 3;
}


/* selecting a specific grid to span*/
.item:nth-child(12)
{
    /* span starts from column 3 and span across 3 columns from the start */
    grid-column: 3 / span 3;
    /* span starts from row 5 and then span across 2 rows afterwards  */
    grid-row: 5 / span 2;
} 


auto-fit, minmax(min, max)
--------------

.grid{
    display: grid;
    
    /* repeat(auto-fit,minmax(min, max)) */
    
    /* auto-fit means fit the grid items based on screen size */
    /* minmax(min, max) - 2 args, 1.min - min size for each grid /*2.max - max size for each grid  */
    /* this size varies in b/w min and max values while changing screen size */
    /* if max is smaller than min, then max is ignored and the function is treated as min.  */
    
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    
    /* 300px is min, 1fr is max, ie 300px will be the min width a grid can take, and 1fr is max width a grid can take*/
    /* if minmax(700px, 1fr) -- min > max, so 1fr is ignored,
        and grids will only  take 1000px */
}

grid template areas - grid areas
----------------------------------
The grid-template-areas property specifies areas within the grid layout.

You can name grid items by using the grid-area property, and then reference to the name in the grid-template-areas property.


.container{
    display: grid;

    grid-template-areas: 
    /* header spans across 3 cols */
    'header header header'
    
    /*section spans across 2cols-sidebar spans 1 col */
    'section01 section01 sidebar'
    
    /* box1 spans 1 col - box2 spans 2 cols */
    'box-1 box-2 box-2'
    
    /* box-3 spans entire 3 cols */
    'box-3 box-3 box-3' 
    
    /* footer spans 3 cols */
    'page-ft page-ft page-ft';
    
    /* gap for grids */
    grid-gap: 2rem;
    

}

/*  assign grid area property for each for spanning precisely */
.header{
    grid-area: header;
    text-align: center;
}
.section01{
    grid-area: section01;
}
.sidebar{
    grid-area: sidebar;
}   

.box-1{grid-area: box-1}
.box-2{grid-area: box-2}
.box-3{grid-area: box-3}

.page-ft{
    grid-area: page-ft;
    text-align: center;
}
