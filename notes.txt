what is html?

used to structure content on a web page such as image, text, forms ...

web structe content use html tags such as img, p, a, div..


doctype tell what type of document is

such as html xml xhtml..


declare document as html5

--metatags:
Meta elements are typically used to specify page description, keywords, author of the document, last modified, and other metadata.

Example 1 - Define keywords for search engines:
<meta name="keywords" content="HTML, CSS, XML, XHTML, JavaScript">

Example 2 - Define a description of your web page:
<meta name="description" content="Free Web tutorials on HTML and CSS">

--tags
tags have attributes and for each attribute there is a property.

one h1 per page is the best practice.

 <p> tag block level elements.appears in diff block.


lorem100 

strong tag makes text pro,em tag makes text italics

<br> line break.

<hr> - horizontal rule  : it craete a horizontal line.

<a> tag represent links and  it is an inline elements which means all a tag appears
in just one line if not separated by p tag of line breaker ..
a tag have href attribute - it is the location we ar linking to

target="_blank" : open in new tab

--alt attribbute of img tag: alternative text to appear incase image doesnt show up.

unrodered list not numbered and each item is wrapped inside li tag.

ordered list - ol tag


Tables in html
    use for tabular data

thead tag for to display head
tr for each row
th for each heading value. ithent is only for tthe headinf
tbody for content   
then tr for table row
later td for table data in each row


--forms 

forms r displayed on pasge usinh html and css
bt they r processed using back end language.

in forms there is 'action' attribute where v specify the file where our form to 
be submitted. such as php file etc..
all the inputs are submitted to the file specified in the action attribute



for attribute of label tag must match with the id of the input
name attrbute of input tag is used on the server side. ie if want to grab the value 
of input we need to use the value of name attribute.
</form>
textarea tag is used instead of input tag to while creating an bio form or message box

</form>
--select tag for dropdown menus

--date type for date related data

--number type for numbers


--radio type for each radio buttons

Radio buttons are normally presented in radio groups (
    a collection of radio buttons describing a set of related options). 
    Only one radio button in a group can be selected at the same time.

Note: The radio group must have share the same name 
(the value of the name attribute) to be treated as a group. Once the radio group
 is created, selecting any radio button in that group automatically deselects any 
 other selected radio button in the same group. You can have as many radio groups on
  a page as you want, as long as each group has its own name.

Note: The value attribute defines the unique value associated with each radio button. 
The value is not shown to the user, but is the value that is sent to the server on 
"submit" to identify which radio button that was selected.




--checked attribute of input tag to preselect the radio button while page loads


--selected attr ibute of option tag to preselect a value while page loads


--placeholder attribute to initally place default value in the field.


shortcut -- ctrl + d to choose next simlar word.
    





block elevel elements takes full span of the page
and if we put any tags after it will be in next line.
eg: p and div 

inline elements elements does not take full page.
it onlytakes wha its needed.
so if we write anything after inline elements it will shown up right of the inline element
dont take new line
eg: link element 'a' and image element img.


--id and classes
always use an id at amOnce. ie it is individual to a particular section
class can be repeated for different sections in the page.

for eg: if want to style both the contact and about section of our page 
in those case it is better to use classes, so v cab specify same class name for both.
and style it using that common class.


--span and div elements
difference is span is inline and div is a block level element.



entities
--non breaking space 
if wwnt to give saome whitspaces after the text 
if v manually do it id doesnt  reflect  the pageso use 
entity called &nbsp;


semantic tags

header - top
footer-bottom

main - indicates main content of the page. main tag wraps up sections, article  of a page.
    section - about , services , contact etc..
        article tag: blog post,article post -comes inisde section tag

aside tag: side bar contents, eg: ads, or contents that is not really tht main focus
of the page.



CSS BASICS

--inline , internal nad external css

--external css i the best method 
so for external css to work, need to specify the link tag in html specifying the path of
external css file.

<link rel="stylesheet" href="css/style.css">
--here rel tells type of link here it is stylesheet,
--href is the location.

. is for classes and # is for id's.

--Elements and tags

h2 is an element
<h2> is tag.
p is a paragraph
<p> is a tag.
img is an image element
<img> is a tag

i.e. elements with in angle brackets r called tags.


>dev tools
ctrl + shift + i to open the dev tools.
every browser has its own default styling.
even v dont style a sections of apage, browser does its own styling on that.
this styling apperas in 'user agent stylesheet' secdtion is dev tools.
v can make changes temporarily in the page.





--fonts in css

fonts are deafult sans serif.

EG:
font-family: Arial, Helvetica, sans-serif;
        /* it looks for Arial if not found then Helvetica if not, then sans serif */
font-size is deafult 16 px for page

line-height property means line spacing ie space b/w each lines.
and line-height value is specified em units.
--em units:
Relative to the font-size of the element (2em means 2 times the size of the current font)
ie. line height wud be 32 px.(2x16px)


--Color property in css

rgb(0,0,0) - black since no value specified fo red green and blue.
color: rgb(0, 0, 255) - gives a blue color since value for blue is set to 255 and all other r empyt.
color: rgb(255, 255, 255) - gives white.

--colors using hexadecimals
starts with # symbol follwed by 3 or 6 digits or letters.
numbers are from 0 to 9.
and letters from A to F.
here each two combination of letters or digits represent a particular color
and each combination is red ,green,blue.
eg:
    color: #000000
    here it is black since all combination is zero
    or
    color:#000

    if v want  blue color,
    color: #0000ff

    if want white
    color: #ffffff
    or 
    color:#fff

for more colors refer;
    https://www.color-hex.com/
    https://htmlcolorcodes.com/


--backgrounds

to have a transparent bgd, use png images.

--borders:
border-width: 3px;
border-style: solid;
border-color: brown;

above is the 3 main properties for styling border of an element.
note: solid is common value for border-style property.

--shortcut to style border instead of above metho is to use border property
eg:
    border: 3px solid brown;

works same as above;
can br given any order.

can also give border-top, border-left ...

border-radius property makes border round shape
eg: border-radius: 10px;

--background-image property in css
to set the background image forour page.


--background-repeat property

The background-repeat property sets if/how a background image will be repeated.

By default, a background-image is repeated both vertically and horizontally.

Tip: The background image is placed according to the background-position property.
 If no background-position is specified, the image is always placed at the element's 
 top left corner.
 for eg: if background-image is given in div, the image is set at top left cornet of 
 div element.

 eg:
    background-repeat: no-repeat
        image not repeated 
    repeat-x: repeated along x axis
    repeat-y
    
--background-position property
positions the bg image in the page.
eg:
    background-position: top right;
    image will be positioned i the top rght corner of the page.

--background-attachment 
if set to fixed, images dont sccroll with the page.i.e. fixed.
else,
    it scrolls with the page.


--background-size
to show the whole image that fits the page.
set value cover for background-size.

--in dev tools,
    divs are default deisplayed as block since it is a block level element.

Margin and Padding

margn is outside the border or outsie the element
while pading is inside the element or inside the border.
    eg:
        padding: 20px
            gives padding of 20px on all sides of the element.
        margin: 20px
            gives margin of 20px around the border.

-- if v add the padding and width for a box.
    here both the padding pixel and width will be added to give the box size.
    not just width , both will be added.
    eg:
    width: 500px;
    padding: 100px;
    now the box size will be sum of both width and padding values.ie 600width box
so usually v want to keep the right width for the box.
and then give the padding.
to do that,
        set box-sizing property to border-box;

thus v have 500 width box and with in thebox there is 120 px of padding.


--margin on all sides:
    margin:20px 
        sets margin of 20 px arond the border.
    
tip: margin outside , padding inside

--propeprty declared above will be overwritten by the same property 
declared below.
eg:
1.
    padding: 20px;
        it sets padding of 20px  on all sides.

2.
    padding-top: 10px;
    padding-bottom: 10px;
    padding-right: 20px;
    padding-left: 20px;

here 2nd  will overwrite the firsst.


--floats and alignment

when we initially make  webage it is aligned towards left.
to make it center, just 
    create a container class
    and wrap all the contents  of page inside it.
    later style the class by setting a width we want for the container and margin to auto.
which automatically sets margin to left and right of container.

to set margin for top and bottom just give the pxels v need at top and bottom.

--if v just set width and v miinimze the window size .
we gonna miss the contents so to avoid that v need to set
max-with property instead of width.

so if v minimize the page, all contents will be aligned according to it,
eg: using phones, else we need to use scrollbar thru both sides to view the contents.

always usse max-width for the containers;



--text align property in css
values r left, right ,center and justify
deafult one is justify.

floating box left and right
float: left;
float: right;

float the box to the left of window and 
right of window.
always specifu width of box in percentages
and also set box-sizing property 
to border-box.

and if added another box under it it would
be behind both floated boxes.
to avoid that align it properly
clear the both float using clr class.
syntax:
.clr{
    clear:both;
}

and wrap the new box in clr class.


-- when v hover over the link, to change it default style 
use pseudoselector 'hover' on 'a' selector
eg:
     a:hover{
        color: chartreuse;
        text-decoration: underline;
    }
so when hover over it, color changes and underline for the link.

note: whenever v want style both button and link v add a class btn  for both.

--removing bullets points from lists.
set list-style property to none.


--remove the border from last item 
--use pseudo selector last child on li
.side_menu li:last-child
{
    border-bottom: none;
}

--to remove underlines from links,
text-decoration property on link to none;
a{
    text-decoration: none;
}display: inline-blo
display: inline-blo

--note: display the navigation items as block.
syntax: display: block;
then only we effectively add padding to the navigatio bars.



/* changing block elements to inline element */
    ul li{
        display: inline;
    }

--margn: auto;
--The auto Value
You can set the margin property to auto to horizontally center the element within
 its container.

The element will then take up the specified width, and the remaining space will be split equally
between the left and right margins:

--cant set margin as auto for an inline element unless it is displayed as block element.

T--The display: inline-block Value
Compared to display: inline, the major difference is that display: inline-blockdisplay: inline-blo
 allows to set a width and height on the element.

Also, with display: inline-block, the top and bottom margins/paddings are respected,
 but with display: inline they are not.

Compared to display: block, the major difference is that display: inline-block does
 not add a line-break after the element, so the element can
 


 CSS background disappears when using float:left 

 to fix this, use overflow and set ts value as auto.

 overflow: auto;

 input the above css code in our mainnav selector.
 

to make the element appear center use marigin: auto.
 margin: auto can be applied for a block level elements.



--css positions:
we create five boxes and each have a static position by default.
ie. default an element posses static positioninng.

--static:
in css there are top bottom left right properties for 
element. bt if element is static v cant position elements based on values oftop,
botom left right properties.


--Relative:
HERE elementscan be positioned according to top,bottom,left,
right values specified. which cause elements to be moved from ts notmal position.

--absolute:
positining the element relative to its parent element.
here parent element should be positioned relative 
then all its childs is positioned absolute.
for eg: 
if v have a container class which is positioned relative.
and contains two boxes in it, 
and if v position both boxes as absolute, then we can position
them any where with in that relative container using top, right, bottom, left properties.






--fixed:
An element with position: fixed; is positioned relative to the viewport, which means it always stays in the same place even if the page is scrolled. The top, right, bottom, and left properties are used to position the element.

--sticky:
to stick the element to a particular position when v scroll thru the page.
 The top, right, bottom, and left properties are used to position the element.

eg:
nav bars stick to the top of the page while scrolling thru the page.

z-index: to make the element appear under or abv the other element while scrolling thru the page.
if z-index setas -1 for an elemen it appers  under others while scroll

if z-index set as 1 for an elemen it appers  above others scrolling.


display: none;
-- this propeprty will remove the element from the page.

for eg: 
h1{
    display: none;
}

here it will remve the heading from page.

to hide the lement rather than remving it use visibilty property.
ie,
     visibilty: hidden;


NOTE -- styling using classes or id have more order of prefernce than styling suing the element directly.


--!important flag

Using flag called !important can b used to set importance for a particluar styling even it is styled more than times.

eg:
        h3{
        color: brown !important;

    }   

color will remain as  brown even if styed it again




--min-height: 100%;

if height of section is given 500px.
if v place an bgimage in that section , so inorder for the image to appear 100% of that section,
then set min-height peoprty to 100%. thus, image takes 500px.

if need image to appear 50% of the original height, set min-height: 50%. ie. it takes 250px.


Image Round Shape--
--to make the image looks round 
	border-radius: 50%;



--view port height or vh

view port is whole area inside the browser.

vh of 100 covers entire browser area. 
each vh is a slice .
if vh is 1. then it is slice 1.
so, there is total of 100 slice in a browser



--view port width or vw

a vw of 100 takes full width of a browser from left to right.




Flexbox
----------

--flex is a value assigned to the display property

--allows to align elements in the page without using 
float property.

-- if v assign display: flex; to a container element,
    it creates a flex container. then each element in that  
   flex container will be a flex item.
    by default, display: flex aligns all the child elements horizontally.


   #container
    {
        /* by default display: flex shows elements in row wise or horizontally */
        display: flex;
        /* if v set flex-direction as column, all element will be displayed in diff. columns */
        /* flex-direction: column; */
        /* flex-direction: column-reverse; */
        /* flex-direction: row; -- same as using display:flex;
        /* flex-direction: row-reverse; */
        
    }

flex-wrap: wrap;
-----------------
to wrap the flex items to another line.

flex-wrap property -- shud be specified in the flex container.   


flex-basis: 200px;
-----------
used to set the flex item width.


alignment propeprty
-----------------------
 1. justify-content -- to align along horizontal axis 

justify-content: flex-start; 
 flex-start is default alignment ie to elft 
justify-content: flex-end;
 opp of flex-start 
justify-content: space-around;
 space-around gives space around flex item 
justify-content: space-between;
 removes space from items at the ends. 
justify-content: space-evenly;
 similar to space-around 

 2. align-items  -- to align along vertical axis.(must specify a height property)  

align-items: flex-start;
 flex-start -- default. ie alignes at the top of the axis 
align-items: flex-end;
 flex-end -- aligned at the bottom of the container 
align-items: stretch;
 stretch -- stretch the flexbox vertically to the height of the container 
align-items: center;
 align items to the center of the container. 
height: 500px;



3. align-content - align vertiaclly when there is extra space 
 align-content: center; 
        --align the contents to the center 

4.align-self
-- to align an individual item, use align-self for that item 
sample,
align
.items.item-2
{
    align-self: center;
     here item-2 will b aligned center 
}



z-index
--------

    img
    {
        position: absolute;
        top: 0;
        left: 0;
        z-index: 1;
        /* if v set z-index: 1, img is seen abv the text.
        if z-index: 0, img is seen behind the text */
    }

z-index only works on positioned elements (position: absolute, position: relative, position: fixed, or position: sticky).

url: https://www.w3schools.com/cssref/pr_pos_z-index.asp




--transparency / opacity
---------------------------

 background-color: rgba(0, 0, 0, .4)

here rgba(red,blue,green, alpha)

alpha means amount of opacity for the background-color.


.btn selectror
-----------------------

.btn{
    display: inline-block;
    padding: .6rem;
    width: 130px;
    background: #65CC65;
    color: #ffffff;
    text-align: center;
    margin: 1rem 0;
    border: none;
}

always add display: inline-block for the links . since then v can add width, height, padding, magin effcetively to it.

also add border: none, since v may add this same class to an actual button, it shud not have any borders.






margin: auto -- gives autmatic margin on left and right margin.



https://www.latlong.net/ -- to get the latitude and longitude.




height: 100%  and height: 100px -- difference
---------------------------------------

if v set height: 100% -- it takes the eaxct height of div element.
if v set height: 100px  -- extra height will be added to the actual height of the element.


exampl:

hr{
    border: 1px solid #95A5A6;
    height: 100%;
}

consider here v place hr after div element which is displayed flex.
so it will appear as vertical line. and want to set a height for that line.
if v set height: 100% -- hr takes the exact height of div
if height: 100px -- adds more px of height to the height of div. so line hav more height. (not good option)





